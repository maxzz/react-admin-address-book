{"version":3,"sources":["myUrlField.js","users.js","App.js","reportWebVitals.js","index.js"],"names":["MyUrlField","record","source","href","UserList","props","List","Datagrid","rowClick","TextField","EmailField","dataProvider","jsonServerProvider","oldLogError","console","error","args","indexOf","apply","App","Admin","Resource","name","list","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6TAMeA,EAJI,SAAC,GAAD,QAAGC,cAAH,MAAY,GAAZ,EAAgBC,EAAhB,EAAgBA,OAAhB,OAA6B,mBAAGC,KAAMF,EAAOC,GAAhB,SAC3CD,EAAOC,MCCCE,EAAW,SAAAC,GAAK,OACzB,cAACC,EAAA,EAAD,2BAAUD,GAAV,aACI,eAACE,EAAA,EAAD,CAAUC,SAAS,OAAnB,UACI,cAACC,EAAA,EAAD,CAAWP,OAAO,OAClB,cAACO,EAAA,EAAD,CAAWP,OAAO,SAElB,cAACQ,EAAA,EAAD,CAAYR,OAAO,UAEnB,cAACO,EAAA,EAAD,CAAWP,OAAO,UAGlB,cAAC,EAAD,CAAYA,OAAO,YACnB,cAACO,EAAA,EAAD,CAAWP,OAAO,wBCVxBS,G,OAAeC,YAAmB,0CAExC,WACI,IAAMC,EAAcC,QAAQC,MAC5BD,QAAQC,MAAQ,WAAmB,IAAD,uBAANC,EAAM,yBAANA,EAAM,gBACP,kBAAZA,EAAK,IAA+B,eAAZA,EAAK,IACjB,kBAAZA,EAAK,IAA+B,gBAAZA,EAAK,IACjB,kBAAZA,EAAK,KAAuE,IAApDA,EAAK,GAAGC,QAAQ,gCAG/CJ,EAAYK,MAAMJ,QAASE,IARvC,GAsBeG,MATf,WACE,OACE,cAACC,EAAA,EAAD,CAAOT,aAAcA,EAArB,SAEI,cAACU,EAAA,EAAD,CAAUC,KAAK,QAAQC,KAAMnB,OCbtBoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6334b562.chunk.js","sourcesContent":["import * as React from 'react';\r\n\r\nconst MyUrlField = ({ record = {}, source }) => <a href={record[source]}>\r\n    {record[source]}\r\n</a>;\r\n\r\nexport default MyUrlField;\r\n","import * as React from 'react';\r\nimport { List, Datagrid, TextField, EmailField/*, UrlField*/ } from 'react-admin';\r\nimport MyUrlField from './myUrlField';\r\n\r\nexport const UserList = props => (\r\n    <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"name\" />\r\n            {/* <TextField source=\"username\" /> */}\r\n            <EmailField source=\"email\" />\r\n            {/* <TextField source=\"address.street\" /> */}\r\n            <TextField source=\"phone\" />\r\n            {/* <TextField source=\"website\" /> */}\r\n            {/* <UrlField source=\"website\" /> */}\r\n            <MyUrlField source=\"website\" />\r\n            <TextField source=\"company.name\" />\r\n        </Datagrid>\r\n    </List>\r\n);","import * as React from 'react';\nimport { Admin, Resource/*, ListGuesser*/ } from 'react-admin';\nimport jsonServerProvider from 'ra-data-json-server';\nimport { UserList } from './users';\nimport './App.css';\n\nconst dataProvider = jsonServerProvider('https://jsonplaceholder.typicode.com');\n\n(() => {\n    const oldLogError = console.error;\n    console.error = function(...args) {\n        if (typeof args[3] !== 'string' || args[3] !== 'Transition' ||\n            typeof args[1] !== 'string' || args[1] !== 'findDOMNode' ||\n            typeof args[0] !== 'string' || args[0].indexOf('is deprecated in StrictMode') === -1\n            )\n        { // arg[1,2] === 'findDOMNode'; arg[3] === 'transition'\n            oldLogError.apply(console, args);\n        } //else {console.log('me', args);}\n    }\n})();\n\nfunction App() {\n  return (\n    <Admin dataProvider={dataProvider}>\n        {/* <Resource name=\"users\" list={ListGuesser}></Resource> */}\n        <Resource name=\"users\" list={UserList}></Resource>\n    </Admin>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}